import asyncio
import uuid
from nats.aio.client import Client as NATS
from nats.js.api import StreamConfig

NATS_URL = "nats://localhost:4222"


async def main():
    nc = NATS()
    await nc.connect(servers=[NATS_URL])
    js = nc.jetstream()

    process_id = str(uuid.uuid4())
    chunks = [
        "–ü–µ—Ä–≤—ã–π –∫—É—Å–æ–∫ —Ç–µ–∫—Å—Ç–∞.",
        "–í—Ç–æ—Ä–æ–π –∫—É—Å–æ–∫ —Ç–µ–∫—Å—Ç–∞.",
        "–¢—Ä–µ—Ç–∏–π –∫—É—Å–æ–∫ —Ç–µ–∫—Å—Ç–∞."
    ]

    # –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    async def progress_handler(msg):
        print("üìå –ü—Ä–æ–≥—Ä–µ—Å—Å:", msg.data.decode())

    await js.subscribe("summaries.progress", cb=progress_handler)

    # –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ñ–∏–Ω–∞–ª
    async def final_handler(msg):
        print("‚úÖ –§–∏–Ω–∞–ª:", msg.data.decode())

    await js.subscribe("summaries.final", cb=final_handler)

    # –ø—É–±–ª–∏–∫—É–µ–º –∑–∞–¥–∞–Ω–∏–µ
    await js.publish("summaries.process", payload={
        "process_id": process_id,
        "chunks": chunks
    }.__str__().encode())

    print(f"üöÄ –ó–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {process_id}")

    # –¥–µ—Ä–∂–∏–º –∫–ª–∏–µ–Ω—Ç–∞ –∂–∏–≤—ã–º
    await asyncio.Event().wait()


if __name__ == "__main__":
    asyncio.run(main())
